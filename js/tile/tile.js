// Generated by CoffeeScript 1.6.1
/*
@CLASS UTILITY
@property v, String|Integer|Boolean value
@description chainable
*/

var U,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

U = function(v) {
  var ut;
  ut = (function() {

    function ut(initValue) {
      this.initValue = initValue != null ? initValue : null;
      this.v = initValue;
      this.cache = {};
      this.settings = {};
      this.settings.localstorage = !!(__indexOf.call(window, 'localStorage') >= 0 && window['localStorage'] !== null);
      this.settings.storgeCompressor = typeof LZString !== 'undefined';
      this.registerEvts = {};
    }

    /*
    # check type of the stored value
    */


    /* =====================================================================
    */


    ut.prototype.is = function(type) {
      var getType, types;
      getType = function(thing, prime) {
        return Object.prototype.toString.call(thing);
      };
      types = {
        'array': '[object Array]',
        'string': '[object String]',
        'object': '[object Object]',
        'win': '[object Window]',
        'doc': '[object HTMLDocument]',
        'function': '[object Function]'
      };
      this.v = types[type] === getType(this.v);
      return this;
    };

    /*
    # EVENTS callbacks
    */


    /* =====================================================================
    */


    ut.prototype.on = function(n, cb) {
      return this.registerEvts[n] = cb;
    };

    ut.prototype.fire = function(n, data) {
      return this.registerEvts[n](data);
    };

    ut.prototype.val = function() {
      return this.v;
    };

    /*
    # Storage
    */


    /* =====================================================================
    */


    ut.prototype.setStore = function(k, v, param) {
      var storage, value;
      value = {};
      if (param) {
        value[exp] = param.expire ? param.expire + this.time() : null;
        storage = param.driver ? param.driver : localStorage;
      }
      if (this.settings.localstorage) {
        value[value] = v;
        if (this.settings.storgeCompressor) {
          value[value] = LZString.compress(v);
        }
        return window[storage][k] = JSON.stringify(value);
      }
    };

    ut.prototype.getStore = function(k, driver) {
      var val;
      if (this.settings.localstorage) {
        return val = this.settings.storgeCompressor ? LZString.decompress(localStorage[k]) : JSON.parse(localStorage[k]);
      }
    };

    ut.prototype.delStore = function(k, driver) {
      if (this.settings.localstorage) {
        return delete localStorage[k];
      }
    };

    /*
    # Dates
    */


    /* =====================================================================
    */


    ut.prototype.date = function() {
      var _ref;
      return (_ref = cache.date) != null ? _ref : cache.date = new Date();
    };

    ut.prototype.time = function() {
      return +date();
    };

    ut.prototype.hasExpired = function(exp) {
      return (exp < this.time() ? true : false);
    };

    ut.prototype.setDay = function(days) {
      this.date();
      return cache.date.setTime(cache.date.getTime() + days * 24 * 60 * 60 * 1000);
    };

    ut.prototype.getDate = function() {
      this.date();
      return cache.date.toGMTString();
    };

    return ut;

  })();
  return new ut(v);
};


window.TILE = (function TILE() { 

    var TILE, i, API,

    var TILE = function(){};

    var API = {
        // Generated by CoffeeScript 1.6.1
var domBuilder, random;

domBuilder = function(obj) {
  var content, i, prop, propString, tag;
  tag = obj.tag;
  prop = obj.prop;
  content = obj.content;
  propString = '';
  if (prop) {
    for (i in prop) {
      propString += i + '="tile ' + prop[i] + '" ';
    }
  } else {
    propString = "";
  }
  return ['<', tag, " ", propString, '>', content, '</', tag, '>'].join('');
};

random = function(len) {
  var min;
  min = 0;
  return Math.floor(Math.random() * (len - min + 1)) + min;
};

TILE.prototype.builder = function(obj) {
  this.obj = obj;
  this.color = ['PURPLE', 'MAGENTA', 'TEAL', 'BROWN', 'PINK', 'ORANGE', 'BLUE', 'RED', 'GREEN', 'BLACK'];
  this.size = ['', 'double', 'double vert', 'quad', 'quad double'];
  domBuilder(obj);
  return this;
};

TILE.prototype.populate = function(method, blocks) {
  var block, _i, _len;
  for (_i = 0, _len = blocks.length; _i < _len; _i++) {
    block = blocks[_i];
    this.parent[method](this.build(block));
  }
  return true;
};

        // Generated by CoffeeScript 1.6.1

TILE.prototype.widget = function() {};

    }

    // extending api
    for (; i<API.length; i++) {
        TILE[API] = API[i]
    }

    return new TILE

})()
